{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/hooks/use-axios-context.tsx"],"sourcesContent":["\"use client\";\n// axios-context.tsx\nimport React, { createContext, useContext, ReactNode } from \"react\";\nimport axios, { AxiosInstance } from \"axios\";\n\n// Create an Axios context with the default value as undefined\nconst AxiosContext = createContext<AxiosInstance | undefined>(undefined);\n\ninterface AxiosProviderProps {\n  children: ReactNode;\n}\n\n// Provide Axios instance through context\nexport function AxiosProvider({ children }: AxiosProviderProps) {\n  const axiosInstance = axios.create({\n    baseURL: process.env.NEXT_PUBLIC_BACKEND,\n  });\n\n  return (\n    <AxiosContext.Provider value={axiosInstance}>\n      {children}\n    </AxiosContext.Provider>\n  );\n}\n\n// Custom hook to use Axios instance\nexport function useAxiosContext() {\n  const context = useContext(AxiosContext);\n  if (context === undefined) {\n    throw new Error(\"useAxiosContext must be used within an AxiosProvider\");\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AACA,oBAAoB;AACpB;AACA;AAYa;;;AAfb;;;AAKA,8DAA8D;AAC9D,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA6B;AAOvD,SAAS,cAAc,EAAE,QAAQ,EAAsB;IAC5D,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;QACjC,OAAO;IACT;IAEA,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;kBAC3B;;;;;;AAGP;KAVgB;AAaT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANgB"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/lib/queryClient.ts"],"sourcesContent":["import { QueryClient } from \"@tanstack/react-query\";\n\nconst queryClient = new QueryClient();\n\nexport default queryClient;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW;uCAEpB"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/components/QueryClientProviderWrapper.tsx"],"sourcesContent":["\"use client\";\n\nimport queryClient from \"@/lib/queryClient\";\nimport React from \"react\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\n\nconst QueryClientProviderWrapper: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  return (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n};\n\nexport default QueryClientProviderWrapper;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AAMA,MAAM,6BAAsE,CAAC,EAC3E,QAAQ,EACT;IACC,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ,4HAAA,CAAA,UAAW;kBAAG;;;;;;AAE/C;KANM;uCAQS"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}