{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/components/ToastManager.tsx"],"sourcesContent":["import { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntype ToastStatus = \"success\" | \"error\" | \"info\" | \"warning\";\n\nconst notify = ({\n  status,\n  message,\n}: {\n  status: ToastStatus;\n  message: string;\n}) => {\n  toast[status](message, {\n    position: \"top-right\",\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"light\",\n  });\n};\n\nconst ToastManager = () => {\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={5000}\n      hideProgressBar={false}\n      closeOnClick\n      pauseOnHover\n      draggable\n      pauseOnFocusLoss\n      newestOnTop={false}\n      rtl={false}\n      theme=\"light\"\n    />\n  );\n};\n\nexport { notify, ToastManager };\n"],"names":[],"mappings":";;;;;AAAA;;;;AAKA,MAAM,SAAS,CAAC,EACd,MAAM,EACN,OAAO,EAIR;IACC,yKAAA,CAAA,QAAK,CAAC,OAAO,CAAC,SAAS;QACrB,UAAU;QACV,cAAc;QACd,cAAc;QACd,WAAW;QACX,UAAU;QACV,OAAO;IACT;AACF;AAEA,MAAM,eAAe;IACnB,qBACE,6LAAC,yKAAA,CAAA,iBAAc;QACb,UAAS;QACT,WAAW;QACX,iBAAiB;QACjB,YAAY;QACZ,YAAY;QACZ,SAAS;QACT,gBAAgB;QAChB,aAAa;QACb,KAAK;QACL,OAAM;;;;;;AAGZ;KAfM"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/lib/axiosInstance.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BACKEND,\n  headers: {\n    \"ACCESS-CONTROL-ALLOW-ORIGIN\": \"*\",\n  },\n});\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"],"names":[],"mappings":";;;AAAA;AAGW;;AADX,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,SAAS;QACP,+BAA+B;IACjC;AACF;AAEA,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CACpC,CAAC;IACC,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/queries/register-user.ts"],"sourcesContent":["import axiosInstance from \"@/lib/axiosInstance\";\nimport { RegisterUserData } from \"@/types/register-user\";\n\nexport default async function registerUser(data: RegisterUserData) {\n  const response = await axiosInstance.post(\"/user/register\", data);\n  return response.data;\n}\n"],"names":[],"mappings":";;;AAAA;;AAGe,eAAe,aAAa,IAAsB;IAC/D,MAAM,WAAW,MAAM,8HAAA,CAAA,UAAa,CAAC,IAAI,CAAC,kBAAkB;IAC5D,OAAO,SAAS,IAAI;AACtB"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/hooks/use-authenticated-mutation.tsx"],"sourcesContent":["import { useMutation, UseMutationResult } from \"@tanstack/react-query\";\n\ninterface UseAuthenticatedMutationOptions<TData, TSuccess, TError> {\n  mutationFn: (data: TData) => Promise<TSuccess>;\n  onSuccess?: (data: TSuccess) => void;\n  onError?: (error: TError) => void;\n}\n\nconst useAuthenticatedMutation = <TData, TSuccess, TError = unknown>(\n  options: UseAuthenticatedMutationOptions<TData, TSuccess, TError>\n): UseMutationResult<TSuccess, TError, TData> => {\n  const { mutationFn, onSuccess, onError } = options;\n\n  return useMutation({\n    mutationFn,\n    onSuccess,\n    onError,\n  });\n};\n\nexport default useAuthenticatedMutation;\n"],"names":[],"mappings":";;;AAAA;;;AAQA,MAAM,2BAA2B,CAC/B;;IAEA,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG;IAE3C,OAAO,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QACjB;QACA;QACA;IACF;AACF;GAVM;;QAKG,iLAAA,CAAA,cAAW;;;uCAOL"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/hooks/use-register-user-mutation.tsx"],"sourcesContent":["import registerUser from \"@/queries/register-user\";\nimport useAuthenticatedMutation from \"./use-authenticated-mutation\";\nimport { RegisterAuthResponse, RegisterUserData } from \"@/types/register-user\";\nimport { AxiosError } from \"axios\";\nimport { ErrorResponse } from \"@/types/error-response\";\n\nexport default function useRegisterUserMutation(options?: {\n  onSuccess?: (data: RegisterAuthResponse) => void;\n  onError?: (error: AxiosError<ErrorResponse>) => void;\n}) {\n  return useAuthenticatedMutation({\n    mutationFn: async (data: RegisterUserData) => registerUser(data),\n    onSuccess: (data) => {\n      options?.onSuccess?.(data);\n    },\n    onError: (error: AxiosError<ErrorResponse>) => {\n      options?.onError?.(error);\n    },\n  });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAKe,SAAS,wBAAwB,OAG/C;;IACC,OAAO,CAAA,GAAA,oJAAA,CAAA,UAAwB,AAAD,EAAE;QAC9B,UAAU;gEAAE,OAAO,OAA2B,CAAA,GAAA,qIAAA,CAAA,UAAY,AAAD,EAAE;;QAC3D,SAAS;gEAAE,CAAC;gBACV,SAAS,YAAY;YACvB;;QACA,OAAO;gEAAE,CAAC;gBACR,SAAS,UAAU;YACrB;;IACF;AACF;GAbwB;;QAIf,oJAAA,CAAA,UAAwB"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/app/%28auth%29/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\n// import useRegisterUserMutation from \"@/app/hooks/use-register-user-mutation\";\nimport { notify, ToastManager } from \"@/components/ToastManager\";\nimport { RegisterAuthResponse, RegisterUserData } from \"@/types/register-user\";\nimport { AxiosError } from \"axios\";\nimport { ErrorResponse } from \"@/types/error-response\";\nimport useRegisterUserMutation from \"@/hooks/use-register-user-mutation\";\nimport jwt from \"jsonwebtoken\";\n\nexport default function Register() {\n  const [email, setEmail] = useState<string>(\"\");\n  // const [password, setPassword] = useState<string>(\"\");\n  const [userName, setUserName] = useState<string>(\"\");\n\n  // const registerMutation = useRegisterUserMutation({\n  //   onSuccess: (data: RegisterAuthResponse) => {\n  //     setEmail(\"\");\n  //     // setPassword(\"\");\n  //     setUserName(\"\");\n\n  //     notify({\n  //       message: data?.message || \"User Registered Successfully\",\n  //       status: \"success\",\n  //     });\n\n  //     setTimeout(() => {\n  //       window.location.reload();\n  //     }, 2000);\n  //   },\n  //   onError: (error: AxiosError<ErrorResponse>) => {\n  //     const errorMessage = error?.response?.data?.message;\n  //     notify({\n  //       message: errorMessage || \"Something went wrong\",\n  //       status: \"error\",\n  //     });\n  //   },\n  // });\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    const handlesubmit = (e) => {\n      e.preventDefault();\n      const message = \"Testing, Testing..... It worksðŸ™‚\";\n      const id = Math.trunc(Math.random() * 1000000); //Generating a random number and taking the first 10 numbers.\n      const data = {\n        email, // User's email\n        message,\n      };\n      const account = {\n        id,\n      };\n      const SECRET = \"this is a secret\";\n      const token = jwt.sign(account, SECRET);\n      const strapiData = {\n        // Parameters for Strapi\n        data: {\n          id,\n          username: user,\n          email,\n          token,\n        },\n      };\n      fetch(\"http://localhost:1337/api/accounts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(strapiData), // Adding the parameters to the body.\n      }).then(async (res) => {\n        console.log(await res.json()); // Outputs the result\n      });\n\n      // The Rest of the code\n    };\n\n    // registerMutation.mutate(data);\n  };\n\n  return (\n    <div className=\"h-full  p-3 pb-5 sm:p-2 sm:pb-4  md:p-0  flex items-center justify-center bg-gradient-to-r from-purple-400 to-indigo-400 text-black \">\n      <div className=\"bg-white  shadow-lg rounded-lg  p-4 sm:p-8 md:p-16 max-w-2xl  w-full\">\n        <h1 className=\"text-center text-black text-3xl font-bold mb-10\">\n          Register\n        </h1>\n        <form onSubmit={handleSubmit} className=\"grid   gap-2 sm:gap-4\">\n          <label htmlFor=\"email\" className=\" text-lg\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"border  border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            required\n          />\n\n          <label htmlFor=\"password\" className=\"text-lg\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"border   border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            required\n          />\n\n          <label htmlFor=\"username\" className=\"text-lg\">\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n            className=\"border   border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            required\n          />\n\n          <button\n            type=\"submit\"\n            className=\"bg-black col-span-2 h-full py-2   text-white rounded-lg  hover:bg-blue-600 transition duration-200  \"\n          >\n            Submit\n          </button>\n        </form>\n        <ToastManager />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA,gFAAgF;AAChF;AAKA;;;AATA;;;;AAWe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,wDAAwD;IACxD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,qDAAqD;IACrD,iDAAiD;IACjD,oBAAoB;IACpB,0BAA0B;IAC1B,uBAAuB;IAEvB,eAAe;IACf,kEAAkE;IAClE,2BAA2B;IAC3B,UAAU;IAEV,yBAAyB;IACzB,kCAAkC;IAClC,gBAAgB;IAChB,OAAO;IACP,qDAAqD;IACrD,2DAA2D;IAC3D,eAAe;IACf,yDAAyD;IACzD,yBAAyB;IACzB,UAAU;IACV,OAAO;IACP,MAAM;IAEN,MAAM,eAAe,OAAO;QAC1B,MAAM,eAAe,CAAC;YACpB,EAAE,cAAc;YAChB,MAAM,UAAU;YAChB,MAAM,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,6DAA6D;YAC7G,MAAM,OAAO;gBACX;gBACA;YACF;YACA,MAAM,UAAU;gBACd;YACF;YACA,MAAM,SAAS;YACf,MAAM,QAAQ,wIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS;YAChC,MAAM,aAAa;gBACjB,wBAAwB;gBACxB,MAAM;oBACJ;oBACA,UAAU;oBACV;oBACA;gBACF;YACF;YACA,MAAM,sCAAsC;gBAC1C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB,GAAG,IAAI,CAAC,OAAO;gBACb,QAAQ,GAAG,CAAC,MAAM,IAAI,IAAI,KAAK,qBAAqB;YACtD;QAEA,uBAAuB;QACzB;IAEA,iCAAiC;IACnC;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,6LAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,6LAAC;4BAAM,SAAQ;4BAAQ,WAAU;sCAAW;;;;;;sCAG5C,6LAAC;4BACC,MAAK;4BACL,MAAK;4BACL,IAAG;4BACH,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAU;4BACV,QAAQ;;;;;;sCAGV,6LAAC;4BAAM,SAAQ;4BAAW,WAAU;sCAAU;;;;;;sCAG9C,6LAAC;4BACC,MAAK;4BACL,MAAK;4BACL,IAAG;4BACH,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;sCAGV,6LAAC;4BAAM,SAAQ;4BAAW,WAAU;sCAAU;;;;;;sCAG9C,6LAAC;4BACC,MAAK;4BACL,MAAK;4BACL,IAAG;4BACH,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;sCAGV,6LAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;8BAIH,6LAAC,qIAAA,CAAA,eAAY;;;;;;;;;;;;;;;;AAIrB;GA7HwB;KAAA"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}