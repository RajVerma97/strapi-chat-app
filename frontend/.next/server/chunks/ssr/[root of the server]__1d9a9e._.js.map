{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/app/%28auth%29/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\n// import useRegisterUserMutation from \"@/app/hooks/use-register-user-mutation\";\n// import { notify, ToastManager } from \"@/components/ToastManager\";\n// import { RegisterAuthResponse, RegisterUserData } from \"@/types/register-user\";\n// import { AxiosError } from \"axios\";\n// import { ErrorResponse } from \"@/types/error-response\";\n// import useRegisterUserMutation from \"@/hooks/use-register-user-mutation\";\nimport jwt from \"jsonwebtoken\";\n\nexport default function Register() {\n  const [email, setEmail] = useState<string>(\"\");\n  // const [password, setPassword] = useState<string>(\"\");\n  const [userName, setUserName] = useState<string>(\"\");\n\n  // const registerMutation = useRegisterUserMutation({\n  //   onSuccess: (data: RegisterAuthResponse) => {\n  //     setEmail(\"\");\n  //     // setPassword(\"\");\n  //     setUserName(\"\");\n\n  //     notify({\n  //       message: data?.message || \"User Registered Successfully\",\n  //       status: \"success\",\n  //     });\n\n  //     setTimeout(() => {\n  //       window.location.reload();\n  //     }, 2000);\n  //   },\n  //   onError: (error: AxiosError<ErrorResponse>) => {\n  //     const errorMessage = error?.response?.data?.message;\n  //     notify({\n  //       message: errorMessage || \"Something went wrong\",\n  //       status: \"error\",\n  //     });\n  //   },\n  // });\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   const message = \"Testing, Testing..... It worksðŸ™‚\";\n  //   const id = Math.trunc(Math.random() * 1000000); //Generating a random number and taking the first 10 numbers.\n  //   // const data = {\n  //   //   email, // User's email\n  //   //   message,\n  //   // };\n  //   const account = {\n  //     id,\n  //   };\n  //   const SECRET = \"this is a secret\";\n  //   const token = jwt.sign(account, SECRET);\n  //   const strapiData = {\n  //     data: {\n  //       id,\n  //       userName,\n  //       email,\n  //       token,\n  //     },\n  //   };\n  //   fetch(\"http://localhost:1337/api/accounts\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(strapiData),\n  //   }).then(async (res) => {\n  //     console.log(await res.json());\n  //   });\n  // };\n\n  // registerMutation.mutate(data);\n\n  return (\n    <div className=\"h-full  p-3 pb-5 sm:p-2 sm:pb-4  md:p-0  flex items-center justify-center bg-gradient-to-r from-purple-400 to-indigo-400 text-black \">\n      <div className=\"bg-white  shadow-lg rounded-lg  p-4 sm:p-8 md:p-16 max-w-2xl  w-full\">\n        <h1 className=\"text-center text-black text-3xl font-bold mb-10\">\n          Register\n        </h1>\n        <form onSubmit={handleSubmit} className=\"grid   gap-2 sm:gap-4\">\n          <label htmlFor=\"email\" className=\" text-lg\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"border  border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            required\n          />\n\n          <label htmlFor=\"password\" className=\"text-lg\">\n            Password\n          </label>\n          {/* <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"border   border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            required\n          /> */}\n\n          <label htmlFor=\"username\" className=\"text-lg\">\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n            className=\"border   border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            required\n          />\n\n          <button\n            type=\"submit\"\n            className=\"bg-black col-span-2 h-full py-2   text-white rounded-lg  hover:bg-blue-600 transition duration-200  \"\n          >\n            Submit\n          </button>\n        </form>\n        {/* <ToastManager /> */}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAWe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,wDAAwD;IACxD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,qDAAqD;IACrD,iDAAiD;IACjD,oBAAoB;IACpB,0BAA0B;IAC1B,uBAAuB;IAEvB,eAAe;IACf,kEAAkE;IAClE,2BAA2B;IAC3B,UAAU;IAEV,yBAAyB;IACzB,kCAAkC;IAClC,gBAAgB;IAChB,OAAO;IACP,qDAAqD;IACrD,2DAA2D;IAC3D,eAAe;IACf,yDAAyD;IACzD,yBAAyB;IACzB,UAAU;IACV,OAAO;IACP,MAAM;IAEN,gCAAgC;IAChC,wBAAwB;IACxB,wDAAwD;IACxD,kHAAkH;IAClH,sBAAsB;IACtB,gCAAgC;IAChC,kBAAkB;IAClB,UAAU;IACV,sBAAsB;IACtB,UAAU;IACV,OAAO;IACP,uCAAuC;IACvC,6CAA6C;IAC7C,yBAAyB;IACzB,cAAc;IACd,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,eAAe;IACf,SAAS;IACT,OAAO;IACP,kDAAkD;IAClD,sBAAsB;IACtB,iBAAiB;IACjB,4CAA4C;IAC5C,SAAS;IACT,wCAAwC;IACxC,6BAA6B;IAC7B,qCAAqC;IACrC,QAAQ;IACR,KAAK;IAEL,iCAAiC;IAEjC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,8OAAC;4BAAM,SAAQ;4BAAQ,WAAU;sCAAW;;;;;;sCAG5C,8OAAC;4BACC,MAAK;4BACL,MAAK;4BACL,IAAG;4BACH,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAU;4BACV,QAAQ;;;;;;sCAGV,8OAAC;4BAAM,SAAQ;4BAAW,WAAU;sCAAU;;;;;;sCAa9C,8OAAC;4BAAM,SAAQ;4BAAW,WAAU;sCAAU;;;;;;sCAG9C,8OAAC;4BACC,MAAK;4BACL,MAAK;4BACL,IAAG;4BACH,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;sCAGV,8OAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAQX"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}