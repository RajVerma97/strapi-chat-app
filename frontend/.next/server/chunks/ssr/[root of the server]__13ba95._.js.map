{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"../../lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/hooks/use-logout.ts"],"sourcesContent":["import { useCallback } from \"react\";\n\nexport const useLogout = () => {\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    window.location.reload();\n  }, []);\n\n  return { logout };\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,YAAY;IACvB,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACzB,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,OAAO,QAAQ,CAAC,MAAM;IACxB,GAAG,EAAE;IAEL,OAAO;QAAE;IAAO;AAClB"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/hooks/use-user.ts"],"sourcesContent":["import { User } from \"@/types/login-user\";\nimport { useEffect, useState } from \"react\";\n\nexport const useUser = () => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const userString = localStorage.getItem(\"user\");\n    if (userString) {\n      setUser(JSON.parse(userString));\n    }\n  }, []);\n\n  return user;\n};\n"],"names":[],"mappings":";;;AACA;;AAEO,MAAM,UAAU;IACrB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACd,QAAQ,KAAK,KAAK,CAAC;QACrB;IACF,GAAG,EAAE;IAEL,OAAO;AACT"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/socket-io.ts"],"sourcesContent":["import { io } from \"socket.io-client\";\nimport { NEXT_PUBLIC_BACKEND } from \"./contants/constants\";\n\nconst socket = io(`${NEXT_PUBLIC_BACKEND}`, {\n  transports: [\"websocket\", \"polling\"],\n  withCredentials: true,\n  path: \"/socket.io/\",\n  reconnectionAttempts: 5,\n  reconnectionDelay: 1000,\n  secure: true,\n});\n\nexport default socket;\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGA,MAAM,SAAS,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE,GAAG,4HAAA,CAAA,sBAAmB,EAAE,EAAE;IAC1C,YAAY;QAAC;QAAa;KAAU;IACpC,iBAAiB;IACjB,MAAM;IACN,sBAAsB;IACtB,mBAAmB;IACnB,QAAQ;AACV;uCAEe"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { useLogout } from \"@/hooks/use-logout\";\nimport { useUser } from \"@/hooks/use-user\";\nimport socket from \"@/socket-io\";\nimport { useEffect, useState } from \"react\";\n\ntype ChatMessage = {\n  type: string;\n  content: string;\n  sender: number;\n  receiver: number;\n};\n\nexport default function Home() {\n  const [data, setData] = useState<ChatMessage[]>([]);\n  const [message, setMessage] = useState(\"\");\n  const user = useUser();\n\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on(\"newMessage\", (incomingMessage: ChatMessage) => {\n      setData((prev) => [...prev, incomingMessage]);\n    });\n\n    // Clean up the socket listener on component unmount\n    return () => {\n      socket.off(\"newMessage\");\n    };\n  }, []); // Add empty dependency array to ensure the listener is added only once\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!message.trim()) return; // Prevent empty messages\n    if (!user) {\n      console.error(\"User is not logged in\");\n      return;\n    }\n\n    const messageData: ChatMessage = {\n      type: \"text\",\n      content: message,\n      sender: user.id,\n      receiver: user.id, // Adjust this as per actual recipient logic\n    };\n\n    socket.emit(\"sendMessage\", messageData); // Send message to the server\n    setMessage(\"\"); // Clear input after sending\n  };\n  const { logout } = useLogout();\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-xl font-bold\">Chat Application</h1>\n      <div className=\"my-4\">\n        {user ? (\n          <div>\n            <p>Username: {user.username}</p>\n            <p>Email: {user.email}</p>\n\n            <button onClick={handleLogout}>logout</button>\n          </div>\n        ) : (\n          <div>\n            <a href=\"/login\">login</a>\n            <br />\n            <a href=\"/register\">register</a>\n          </div>\n        )}\n      </div>\n\n      {user ? (\n        <form onSubmit={handleSubmit} className=\"mb-4\">\n          <label htmlFor=\"message\" className=\"block mb-2 text-sm font-medium\">\n            Message\n          </label>\n          <input\n            type=\"text\"\n            name=\"message\"\n            placeholder=\"Type your message\"\n            className=\"w-full p-2 border border-gray-300 rounded-md text-black\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <Button\n            variant={\"secondary\"}\n            type=\"submit\"\n            className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600\"\n          >\n            Send Message\n          </Button>\n        </form>\n      ) : (\n        <p className=\"text-red-500\">Login to send messages.</p>\n      )}\n\n      <h2 className=\"text-lg font-semibold\">Chat Messages</h2>\n      <div className=\"mt-4\">\n        {data.length > 0 ? (\n          data.map((msg, index) => (\n            <div key={`${msg.sender}-${index}`} className=\"mb-2\">\n              <span className=\"font-bold\">{msg.sender}</span>: {msg.content}\n            </div>\n          ))\n        ) : (\n          <p>No messages yet.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { Card, CardContent, CardFooter } from \"@/components/ui/card\";\n// import { Input } from \"@/components/ui/input\";\n// import { Button } from \"@/components/ui/button\";\n\n// const ChatInterface = ({ user, socket }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [currentMessage, setCurrentMessage] = useState(\"\");\n//   const [sessions, setSessions] = useState([]);\n//   const [currentSession, setCurrentSession] = useState(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     // Fetch user's chat sessions from Strapi\n//     const fetchSessions = async () => {\n//       try {\n//         // Replace with your actual Strapi API call\n//         const response = await fetch(`/api/chat-sessions?user=${user.id}`);\n//         const data = await response.json();\n//         setSessions(data);\n//       } catch (error) {\n//         console.error(\"Failed to fetch sessions\", error);\n//       }\n//     };\n\n//     // WebSocket message handling\n//     const handleSocketMessage = (event) => {\n//       const message = JSON.parse(event.data);\n//       setMessages((prev) => [...prev, message]);\n//     };\n\n//     if (socket) {\n//       socket.addEventListener(\"message\", handleSocketMessage);\n//     }\n\n//     fetchSessions();\n\n//     return () => {\n//       if (socket) {\n//         socket.removeEventListener(\"message\", handleSocketMessage);\n//       }\n//     };\n//   }, [user, socket]);\n\n//   // Scroll to bottom when messages update\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   }, [messages]);\n\n//   const handleSendMessage = async () => {\n//     if (currentMessage.trim() && socket) {\n//       const messageData = {\n//         content: currentMessage,\n//         user: user.id,\n//         session: currentSession?.id,\n//         timestamp: new Date().toISOString(),\n//       };\n\n//       // Send message via WebSocket\n//       socket.send(JSON.stringify(messageData));\n\n//       // Save message to Strapi\n//       try {\n//         await fetch(\"/api/messages\", {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify(messageData),\n//         });\n//       } catch (error) {\n//         console.error(\"Failed to save message\", error);\n//       }\n\n//       setCurrentMessage(\"\");\n//     }\n//   };\n\n//   const createNewSession = async () => {\n//     try {\n//       const response = await fetch(\"/api/chat-sessions\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           user: user.id,\n//           title: `New Session ${sessions.length + 1}`,\n//           createdAt: new Date().toISOString(),\n//         }),\n//       });\n//       const newSession = await response.json();\n//       setSessions([...sessions, newSession]);\n//       setCurrentSession(newSession);\n//     } catch (error) {\n//       console.error(\"Failed to create new session\", error);\n//     }\n//   };\n\n//   return (\n//     <Card className=\"w-full max-w-2xl mx-auto h-[600px] flex flex-col\">\n//       <div className=\"flex border-b p-4\">\n//         <div className=\"flex-grow\">\n//           <h2 className=\"text-xl font-bold\">\n//             {currentSession ? currentSession.title : \"Select a Session\"}\n//           </h2>\n//         </div>\n//         <Button variant=\"outline\" onClick={createNewSession}>\n//           New Session\n//         </Button>\n//       </div>\n\n//       <CardContent className=\"flex-grow overflow-y-auto p-4\">\n//         {messages.map((msg, index) => (\n//           <div\n//             key={index}\n//             className={`mb-2 p-2 rounded ${\n//               msg.user === user.id\n//                 ? \"bg-blue-100 text-right self-end\"\n//                 : \"bg-gray-100 text-left self-start\"\n//             }`}\n//           >\n//             {msg.content}\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </CardContent>\n\n//       <CardFooter className=\"border-t p-4\">\n//         <div className=\"flex w-full space-x-2\">\n//           <Input\n//             value={currentMessage}\n//             onChange={(e) => setCurrentMessage(e.target.value)}\n//             placeholder=\"Type a message...\"\n//             onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\n//             className=\"flex-grow\"\n//           />\n//           <Button onClick={handleSendMessage}>Send</Button>\n//         </div>\n//       </CardFooter>\n//     </Card>\n//   );\n// };\n\n// export default ChatInterface;\n"],"names":[],"mappings":";;;;;;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;;AAee,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,OAAO,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IAEnB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,+BAA+B;QAC/B,mHAAA,CAAA,UAAM,CAAC,EAAE,CAAC,cAAc,CAAC;YACvB,QAAQ,CAAC,OAAS;uBAAI;oBAAM;iBAAgB;QAC9C;QAEA,oDAAoD;QACpD,OAAO;YACL,mHAAA,CAAA,UAAM,CAAC,GAAG,CAAC;QACb;IACF,GAAG,EAAE,GAAG,uEAAuE;IAE/E,MAAM,eAAe,CAAC;QACpB,MAAM,cAAc;QAEpB,IAAI,CAAC,QAAQ,IAAI,IAAI,QAAQ,yBAAyB;QACtD,IAAI,CAAC,MAAM;YACT,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,MAAM,cAA2B;YAC/B,MAAM;YACN,SAAS;YACT,QAAQ,KAAK,EAAE;YACf,UAAU,KAAK,EAAE;QACnB;QAEA,mHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,eAAe,cAAc,6BAA6B;QACtE,WAAW,KAAK,4BAA4B;IAC9C;IACA,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,YAAS,AAAD;IAE3B,MAAM,eAAe;QACnB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAoB;;;;;;0BAClC,8OAAC;gBAAI,WAAU;0BACZ,qBACC,8OAAC;;sCACC,8OAAC;;gCAAE;gCAAW,KAAK,QAAQ;;;;;;;sCAC3B,8OAAC;;gCAAE;gCAAQ,KAAK,KAAK;;;;;;;sCAErB,8OAAC;4BAAO,SAAS;sCAAc;;;;;;;;;;;yCAGjC,8OAAC;;sCACC,8OAAC;4BAAE,MAAK;sCAAS;;;;;;sCACjB,8OAAC;;;;;sCACD,8OAAC;4BAAE,MAAK;sCAAY;;;;;;;;;;;;;;;;;YAKzB,qBACC,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,8OAAC;wBAAM,SAAQ;wBAAU,WAAU;kCAAiC;;;;;;kCAGpE,8OAAC;wBACC,MAAK;wBACL,MAAK;wBACL,aAAY;wBACZ,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE5C,8OAAC;wBACC,SAAS;wBACT,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;qCAKH,8OAAC;gBAAE,WAAU;0BAAe;;;;;;0BAG9B,8OAAC;gBAAG,WAAU;0BAAwB;;;;;;0BACtC,8OAAC;gBAAI,WAAU;0BACZ,KAAK,MAAM,GAAG,IACb,KAAK,GAAG,CAAC,CAAC,KAAK,sBACb,8OAAC;wBAAmC,WAAU;;0CAC5C,8OAAC;gCAAK,WAAU;0CAAa,IAAI,MAAM;;;;;;4BAAQ;4BAAG,IAAI,OAAO;;uBADrD,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,OAAO;;;;8CAKpC,8OAAC;8BAAE;;;;;;;;;;;;;;;;;AAKb,EAEA,8DAA8D;CAC9D,wEAAwE;CACxE,iDAAiD;CACjD,mDAAmD;CAEnD,gDAAgD;CAChD,kDAAkD;CAClD,8DAA8D;CAC9D,kDAAkD;CAClD,gEAAgE;CAChE,yCAAyC;CAEzC,sBAAsB;CACtB,gDAAgD;CAChD,0CAA0C;CAC1C,cAAc;CACd,sDAAsD;CACtD,8EAA8E;CAC9E,8CAA8C;CAC9C,6BAA6B;CAC7B,0BAA0B;CAC1B,4DAA4D;CAC5D,UAAU;CACV,SAAS;CAET,oCAAoC;CACpC,+CAA+C;CAC/C,gDAAgD;CAChD,mDAAmD;CACnD,SAAS;CAET,oBAAoB;CACpB,iEAAiE;CACjE,QAAQ;CAER,uBAAuB;CAEvB,qBAAqB;CACrB,sBAAsB;CACtB,sEAAsE;CACtE,UAAU;CACV,SAAS;CACT,wBAAwB;CAExB,6CAA6C;CAC7C,sBAAsB;CACtB,sEAAsE;CACtE,oBAAoB;CAEpB,4CAA4C;CAC5C,6CAA6C;CAC7C,8BAA8B;CAC9B,mCAAmC;CACnC,yBAAyB;CACzB,uCAAuC;CACvC,+CAA+C;CAC/C,WAAW;CAEX,sCAAsC;CACtC,kDAAkD;CAElD,kCAAkC;CAClC,cAAc;CACd,yCAAyC;CACzC,4BAA4B;CAC5B,uBAAuB;CACvB,kDAAkD;CAClD,eAAe;CACf,+CAA+C;CAC/C,cAAc;CACd,0BAA0B;CAC1B,0DAA0D;CAC1D,UAAU;CAEV,+BAA+B;CAC/B,QAAQ;CACR,OAAO;CAEP,2CAA2C;CAC3C,YAAY;CACZ,6DAA6D;CAC7D,0BAA0B;CAC1B,qBAAqB;CACrB,gDAAgD;CAChD,aAAa;CACb,iCAAiC;CACjC,2BAA2B;CAC3B,yDAAyD;CACzD,iDAAiD;CACjD,cAAc;CACd,YAAY;CACZ,kDAAkD;CAClD,gDAAgD;CAChD,uCAAuC;CACvC,wBAAwB;CACxB,8DAA8D;CAC9D,QAAQ;CACR,OAAO;CAEP,aAAa;CACb,0EAA0E;CAC1E,4CAA4C;CAC5C,sCAAsC;CACtC,+CAA+C;CAC/C,2EAA2E;CAC3E,kBAAkB;CAClB,iBAAiB;CACjB,gEAAgE;CAChE,wBAAwB;CACxB,oBAAoB;CACpB,eAAe;CAEf,gEAAgE;CAChE,0CAA0C;CAC1C,iBAAiB;CACjB,0BAA0B;CAC1B,8CAA8C;CAC9C,qCAAqC;CACrC,sDAAsD;CACtD,uDAAuD;CACvD,kBAAkB;CAClB,cAAc;CACd,4BAA4B;CAC5B,mBAAmB;CACnB,cAAc;CACd,uCAAuC;CACvC,uBAAuB;CAEvB,8CAA8C;CAC9C,kDAAkD;CAClD,mBAAmB;CACnB,qCAAqC;CACrC,kEAAkE;CAClE,8CAA8C;CAC9C,2EAA2E;CAC3E,oCAAoC;CACpC,eAAe;CACf,8DAA8D;CAC9D,iBAAiB;CACjB,sBAAsB;CACtB,cAAc;CACd,OAAO;CACP,KAAK;CAEL,gCAAgC"}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}