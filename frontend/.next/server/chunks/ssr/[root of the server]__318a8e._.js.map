{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/socket-io.ts"],"sourcesContent":["import { io } from \"socket.io-client\";\n\nif (!process.env.NEXT_PUBLIC_BACKEND) {\n  throw new Error(\"NEXT_PUBLIC_BACKEND environment variable is not defined\");\n}\n\nconst socket = io(\"http://localhost:1337\", {\n  transports: [\"websocket\", \"polling\"],\n  withCredentials: true,\n  path: \"/socket.io/\",\n  reconnectionAttempts: 5,\n  reconnectionDelay: 1000,\n  secure: true,\n});\n\nexport default socket;\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,uCAAsC;;AAEtC;AAEA,MAAM,SAAS,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;IACzC,YAAY;QAAC;QAAa;KAAU;IACpC,iBAAiB;IACjB,MAAM;IACN,sBAAsB;IACtB,mBAAmB;IACnB,QAAQ;AACV;uCAEe"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajneeshverma/Desktop/web-dev/strapi-chat-app/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useUser } from \"@/hooks/use-user\";\nimport socket from \"@/socket-io\";\nimport { useEffect, useState } from \"react\";\n\ntype ChatMessage = {\n  type: string;\n  content: string;\n  sender: string;\n};\n\ntype NewMessageResponse = ChatMessage & {\n  reciever: string;\n};\n\nexport default function Home() {\n  const [data, setData] = useState<NewMessageResponse[]>([]);\n  const [message, setMessage] = useState(\"\");\n  const user = useUser();\n  console.log(user);\n\n  useEffect(() => {\n    socket.on(\"newMessage\", (data) => {\n      setData((prev) => [...prev, data]);\n    });\n\n    return () => {\n      socket.off(\"newMessage\");\n    };\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!message.trim()) return;\n\n    const messageData: ChatMessage = {\n      type: \"text\",\n      content: message,\n      sender: \"User123\",\n    };\n\n    socket.emit(\"sendMessage\", messageData);\n\n    setMessage(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"message\">Message</label>\n        <input\n          type=\"text\"\n          name=\"message\"\n          placeholder=\"Type your message\"\n          className=\"text-black\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n\n        <button type=\"submit\">Send Message</button>\n      </form>\n\n      <h1>Chat Messages</h1>\n      {data.map((message: NewMessageResponse, index) => (\n        <div key={index}>\n          {message.content} : {message.sender}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAgBe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAwB,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,OAAO,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IACnB,QAAQ,GAAG,CAAC;IAEZ,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,mHAAA,CAAA,UAAM,CAAC,EAAE,CAAC,cAAc,CAAC;YACvB,QAAQ,CAAC,OAAS;uBAAI;oBAAM;iBAAK;QACnC;QAEA,OAAO;YACL,mHAAA,CAAA,UAAM,CAAC,GAAG,CAAC;QACb;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,cAAc;QAEpB,IAAI,CAAC,QAAQ,IAAI,IAAI;QAErB,MAAM,cAA2B;YAC/B,MAAM;YACN,SAAS;YACT,QAAQ;QACV;QAEA,mHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,eAAe;QAE3B,WAAW;IACb;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAK,UAAU;;kCACd,8OAAC;wBAAM,SAAQ;kCAAU;;;;;;kCACzB,8OAAC;wBACC,MAAK;wBACL,MAAK;wBACL,aAAY;wBACZ,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;kCAG5C,8OAAC;wBAAO,MAAK;kCAAS;;;;;;;;;;;;0BAGxB,8OAAC;0BAAG;;;;;;YACH,KAAK,GAAG,CAAC,CAAC,SAA6B,sBACtC,8OAAC;;wBACE,QAAQ,OAAO;wBAAC;wBAAI,QAAQ,MAAM;;mBAD3B;;;;;;;;;;;AAMlB"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}